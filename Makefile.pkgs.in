
B = _b

pkgs: pkgs-build

pkgs-reconfigure:
	@for p in $(PKGS); do \
	    (cd $${p}$(B) && make reconfigure); \
	done

pkgs-configure:
	@for p in $(PKGS); do \
	    if test -d $${p}$(B); then \
		(cd $${p}$(B) && make configure); \
	    else \
		$(INSTALL_DATA_DIR) $${p}$(B); \
		(cd $${p}$(B) && ../${srcdir}/${PKGS_DIR}/$$p/configure ${SPOTO_ARGS}); \
	    fi; \
	done

pkgs-build: pkgs-configure
	@for p in $(PKGS); do \
	    (cd $${p}$(B) && make); \
	done

pkgs-clean:
	@for p in $(PKGS); do \
	    if ! test -f $${p}$(B)/Makefile; then continue; fi; \
	    (cd $${p}$(B) && make clean); \
	done

pkgs-distclean:
	@for p in $(PKGS); do \
	    if test -f $${p}$(B)/Makefile; then \
		(cd $${p}$(B) && make distclean); \
	    fi; \
	    if ! test -d $${p}$(B); then continue; fi; \
	    rmdir $${p}$(B); \
	done

pkgs-test: all
	@for p in $(PKGS); do \
	    (cd $${p}$(B) && make test); \
	done

pkgs-shell: all
	@ \
	TCLLIBPATH="$(TCLLIBPATH)"; \
	TCL8_6_TM_PATH="$(TCL8_6_TM_PATH)"; \
	for p in $(PKGS); do \
	    TCLLIBPATH="$$TCLLIBPATH $${p}$(B)"; \
	    TCL8_6_TM_PATH="$$TCL8_6_TM_PATH:$${p}$(B)"; \
	done; \
	TCLLIBPATH="$$TCLLIBPATH" TCL8_6_TM_PATH="$$TCL8_6_TM_PATH" ${TCLSH_PROG} $(SCRIPT)

pkgs-install: all
	@ \
	if ! expr X"$(DESTDIR)" : ^X'/..*' > /dev/null; then \
	    $(E) 'DESTDIR must be an absolute path'; \
	    exit 1; \
	fi; \
	for p in $(PKGS); do \
	    (cd $${p}$(B) && make install DESTDIR="$(DESTDIR)"); \
	done

pkgs-dist: pkgs-configure
	$(DIST_INSTALL_DATA) ${srcdir}/Makefile.pkgs.in $(DIST_DIR)/
	$(INSTALL_DATA_DIR) $(DIST_DIR)/${NAME}
	pkgs='' && \
	for p in $(PKGS); do \
	    if expr $$p : '^..*-.*$$' > /dev/null; then \
		pkg=$$p; \
	    else \
		pkg=$$p-$$(cd $${p}$(B) && ../${srcdir}/${PKGS_DIR}/$$p/configure --version); \
	    fi; \
	    pkgs="$$pkgs $$pkg"; \
	    (cd $${p}$(B) && make dist) \
	    && tar xzf $(DIST_ROOT)/$$pkg.tar.gz -C $(DIST_DIR)/${PKGS_DIR} \
	    && mv $(DIST_DIR)/${PKGS_DIR}/$$pkg $(DIST_DIR)/${PKGS_DIR}/$$p; \
	done \
	&& echo $$pkgs

pkgs-result:
	@for p in $(PKGS); do \
	    if ! test -f $${p}$(B)/Makefile; then continue; fi; \
	    (cd $${p}$(B) && make result); \
	done

pkgs-thatch:
	@for p in $(PKGS); do \
	    if ! test -f $${p}$(B)/Makefile; then continue; fi; \
	    (cd $${p}$(B) && make thatch); \
	done

.PHONY: pkgs pkgs-reconfigure pkgs-configure pkgs-build pkgs-clean pkgs-distclean
.PHONY: pkgs-test pkgs-shell pkgs-install pkgs-dist
.PHONY: pkgs-result pkgs-thatch
